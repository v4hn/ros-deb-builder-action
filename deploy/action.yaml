name: create apt repository
description: Create and deploy an apt repository from a bunch of built deb files
author: Jochen Sprickerhof
branding:
  icon: 'package'
  color: 'green'
inputs:
  BRANCH:
    description: repository branch to push to
    required: true
  GITHUB_TOKEN:
    description: Set to deploy to a DEB_DISTRO-ROS_DISTRO branch in the same repo.
    required: false
    default: false
  SQUASH_HISTORY:
    description: If set to true, all previous commits on the target branch will be discarded.
    required: false
    default: false
runs:
  using: composite
  steps:
    - name: Create apt repository
      run: $GITHUB_ACTION_PATH/../repository.sh
      shell: sh
      env:
        BRANCH: ${{ inputs.BRANCH }}
    - name: Mitigate github server-side hangup
      run: |
        rm -f /home/runner/apt_repo/repository/*-dbgsym_*.deb
        # git config --global http.postBuffer 52428800
        # git config --global pack.window 0
        # git config --global http.minSessions 1
        # git config --global http.maxRequests 1
        # git config --global http.version HTTP/1.1
        # git config --global pack.packSizeLimit 100m
        # find /home/runner/apt_repo -type f -size +40M -exec du -h {} \; -exec rm {} \;
      shell: sh
    - name: Deploy
      # if we overwrite the branch in this repository, forego s0/git-publish-subdir-action which fetches the whole repository
      if: ${{ inputs.GITHUB_TOKEN && inputs.SQUASH_HISTORY }}
      run: |
        git config --global user.name "${env.GITHUB_ACTOR}"
        git config --global user.email "${env.GITHUB_ACTOR}@users.noreply.github.com"
        cd /home/runner/apt_repo
        git init .
        git switch -c ${{ inputs.BRANCH }}
        git add .
        git commit -m "Deploy build artifacts to ${{ inputs.BRANCH }}"
        git remote add origin "https://x-access-token:${env.GITHUB_TOKEN}@github.com/${env.GITHUB_REPOSITORY}.git"
        git push --force origin ${{ inputs.BRANCH }}
      shell: sh
    - name: Deploy
      if: ${{ inputs.GITHUB_TOKEN && ( ! inputs.SQUASH_HISTORY ) }}
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: ${{ inputs.BRANCH }}
        FOLDER: /home/runner/apt_repo
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        SQUASH_HISTORY: ${{ inputs.SQUASH_HISTORY }}
        # GIT_TRACE_PACKET: 1
        # GIT_TRACE: 1
        # GIT_CURL_VERBOSE: 1
